<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AccountActivated" xml:space="preserve">
    <value>La cuenta {0} ha sido activada</value>
  </data>
  <data name="AccountBlocked" xml:space="preserve">
    <value>El usuario {0} ha sido bloqueado hasta</value>
  </data>
  <data name="AccountDeactivated" xml:space="preserve">
    <value>La cuenta {0} ha sido inhabilitada</value>
  </data>
  <data name="Deleted" xml:space="preserve">
    <value>{0} eliminado</value>
  </data>
  <data name="Duplicate" xml:space="preserve">
    <value>Un registro con ese {0} ya existe</value>
  </data>
  <data name="DuplicateEmail" xml:space="preserve">
    <value>Ya existe un usuario con el email {0}</value>
  </data>
  <data name="DuplicateUserName" xml:space="preserve">
    <value>Ya existe un usuario con el nombre {0}</value>
  </data>
  <data name="EmailConfirm" xml:space="preserve">
    <value>Email confirmado</value>
  </data>
  <data name="EmailNotConfirm" xml:space="preserve">
    <value>El email {0} no ha sido confirmado</value>
  </data>
  <data name="ErrorPassword" xml:space="preserve">
    <value>Error cambiado la contraseña</value>
  </data>
  <data name="ErrorRequest" xml:space="preserve">
    <value>Hubo un problema en la solicitud</value>
  </data>
  <data name="ErrorServerEmail" xml:space="preserve">
    <value>Ha ocurrido un error con el proveedor del servicio de correo</value>
  </data>
  <data name="GreaterThan" xml:space="preserve">
    <value>El campo {0} no puede ser menor que {1}</value>
  </data>
  <data name="InvalidEmail" xml:space="preserve">
    <value>El formato del email {0} es invalido</value>
  </data>
  <data name="InvalidUserName" xml:space="preserve">
    <value>El nombre de usuario no puede tener espacios ni carácteres especiales</value>
  </data>
  <data name="LessThan" xml:space="preserve">
    <value>El campo {0} no puede ser mayor que {1}</value>
  </data>
  <data name="LinkSendAccount" xml:space="preserve">
    <value>Hemos enviado un email con un link para reactivar su cuenta</value>
  </data>
  <data name="LinkSendEmail" xml:space="preserve">
    <value>Hemos enviado un link de confirmacion a su correo</value>
  </data>
  <data name="LinkSendOTP" xml:space="preserve">
    <value>Hemos enviado un email con un OTP para la validación</value>
  </data>
  <data name="LinkSendPassword" xml:space="preserve">
    <value>Hemos enviado un email con un link para proceder con el cambio de contraseña</value>
  </data>
  <data name="NotEmpty" xml:space="preserve">
    <value>El campo {0} no puede estar vacio</value>
  </data>
  <data name="NotFound" xml:space="preserve">
    <value>Registro no encontrado</value>
  </data>
  <data name="NotFoundSpecific" xml:space="preserve">
    <value>{0} no encontrado</value>
  </data>
  <data name="NotNull" xml:space="preserve">
    <value>El campo {0} no puede ser nulo</value>
  </data>
  <data name="OTPInvalid" xml:space="preserve">
    <value>OTP Invalido</value>
  </data>
  <data name="OTPSuccess" xml:space="preserve">
    <value>OTP verificado correctamente</value>
  </data>
  <data name="PasswordRequiresDigit" xml:space="preserve">
    <value>La contraseña debe tener al menos un número</value>
  </data>
  <data name="PasswordRequiresNonAlphanumeric" xml:space="preserve">
    <value>La contraseña debe tener al menos un carácter no alfanumerico</value>
  </data>
  <data name="PasswordRequiresUpper" xml:space="preserve">
    <value>La contraseña debe tener al menos una letra mayúscula</value>
  </data>
  <data name="PasswordSuccess" xml:space="preserve">
    <value>La contraseña ha sido cambiada</value>
  </data>
  <data name="PasswordTooShort" xml:space="preserve">
    <value>La contraseña es demasiado corta</value>
  </data>
  <data name="ProfileAlready" xml:space="preserve">
    <value>Los datos ya han sido registrados</value>
  </data>
  <data name="ProfileInfo" xml:space="preserve">
    <value>Registre los siguientes datos para ver su información</value>
  </data>
  <data name="ProfileSaved" xml:space="preserve">
    <value>Datos personales {0}</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>{0} guardado</value>
  </data>
  <data name="Unauthorized" xml:space="preserve">
    <value>Usuario no autorizado</value>
  </data>
  <data name="Updated" xml:space="preserve">
    <value>{0} actualizado</value>
  </data>
  <data name="UserPassInvalid" xml:space="preserve">
    <value>Usuario o Contraseña invalida</value>
  </data>
  <data name="UserTokenInvalid" xml:space="preserve">
    <value>Token o usuario invalido</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Bienvenido {0}</value>
  </data>
</root>